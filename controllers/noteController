const Note = require("../models/noteModel")
const mongoose = require('mongoose')

// GET ALL NOTES
const getNotes = async (req, res) => {
    const notes = await Note.find({}).sort({createdAt: -1})
    res.status(200).json(notes)
}

// GET A SINGLE NOTE
const getNote = async(req, res) => {
    const { id } = req.params

    if(!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({error: "No such Note"})
    }

    const note = await Note.findById(id)

    if(!note) {
        return res.status(404).json({error: 'No such Note'})
    }

    res.status(200).json(note)
}

// CREATE NEW NOTE
const createNote = async (req, res) => {
    const {title, note} = req.body

    try {
        // Create a new note with the provided title and note fields
        const newNote = await Note.create({title, note})
        res.status(200).json(newNote)
    } catch (error) {
        res.status(400).json({error})
    }
}

// Delete A NOTE
const deleteNote = async (req, res) => {
    const { id } = req.params

    if(!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({error: "No such Note"})
    }

    const note = await Note.findOneAndDelete({_id: id})

    if(!note) {
        return res.status(400).json({error: "No Such Note"})
    }

    res.status(200).json(note)
}

// UPDATE A NOTE
const updateNote =  async (req, res) => {
    const { id } = req.params

    if(!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(404).json({error: "No such Note"})
    }

    const note = await Note.findOneAndUpdate({_id: id}, {
        ...req.body
    })

    if(!note) {
        res.status(400).json({error: "No such Note"})
    }

    res.status(200).json(note)
}



const DeleteAllNotes = async (req, res) => {
    try {
        const deleteAllNotes = await Note.deleteMany();
        res.status(200).json({ message: "All notes deleted successfully" });
    } catch (error) {
        res.status(400).json({ error: error.message });
    }
}

module.exports = {
    getNotes,
    getNote,
    createNote,
    deleteNote,
    updateNote,
    DeleteAllNotes
}